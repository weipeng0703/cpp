// 题目
/*
1.有了进程，为什么还要有线程？

2.进程和线程的区别
*/

// 解答
/*
1.线程产生的原因：

进程可以使多个程序能并发执行，以提高资源的利用率和系统的吞吐量；
但是其具有一些缺点：

    进程在同一时间只能干一件事
    进程在执行的过程中如果阻塞，整个进程就会挂起，即使进程中有些工作不依赖于等待的资源，仍然不会执行。

因此，操作系统引入了比进程粒度更小的线程，作为并发执行的基本单位，
从而减少程序在并发执行时所付出的时空开销，提高并发性。

和进程相比，线程的优势如下：

    1.从资源上来讲，线程是一种非常"节俭"的多任务操作方式。
    在linux系统下，启动一个新的进程必须分配给它独立的地址空间，
    建立众多的数据表来维护它的代码段、堆栈段和数据段，这是一种"昂贵"的多任务工作方式。

    2.从切换效率上来讲，运行于一个进程中的多个线程，它们之间使用相同的地址空间，
    而且线程间彼此切换所需时间也远远小于进程间切换所需要的时间。
    据统计，一个进程的开销大约是一个线程开销的30倍左右。

    3.从通信机制上来讲，线程间方便的通信机制。
    对不同进程来说，它们具有独立的数据空间，
    要进行数据的传递只能通过进程间通信的方式进行，这种方式不仅费时，而且很不方便。
    线程则不然，由于同一进程下的线程之间贡献数据空间，
    所以一个线程的数据可以直接为其他线程所用，这不仅快捷，而且方便。

除以上优点外，多线程程序作为一种多任务、并发的工作方式，还有如下优点：

1、使多CPU系统更加有效。
操作系统会保证当线程数不大于CPU数目时，不同的线程运行于不同的CPU上。

2、改善程序结构。
一个既长又复杂的进程可以考虑分为多个线程，成为几个独立或半独立的运行部分，这样的程序才会利于理解和修改。

2.进程和线程的区别
1）进程是cpu资源分配的最小单位，线程是cpu调度的最小单位。

2）进程有独立的系统资源，
而同一进程内的线程共享进程的大部分系统资源,包括堆、代码段、数据段，
每个线程只拥有一些在运行中必不可少的私有属性，比如tcb,线程Id,栈、寄存器。

3）一个进程崩溃，不会对其他进程产生影响；
而一个线程崩溃，会让同一进程内的其他线程也死掉。

4）进程在创建、切换和销毁时开销比较大，而线程比较小。
进程创建的时候需要分配系统资源，而销毁的的时候需要释放系统资源。
进程切换需要分两步：
    切换页目录、刷新TLB以使用新的地址空间；
    切换内核栈和硬件上下文（寄存器）；
而同一进程的线程间逻辑地址空间是一样的，不需要切换页目录、刷新TLB。

5）进程间通信比较复杂，而同一进程的线程由于共享代码段和数据段，所以通信比较容易。
*/

// 知识点
/*

*/
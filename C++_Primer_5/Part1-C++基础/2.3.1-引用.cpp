/*
C++11标准新增了一个右值引用，主要用于内置类
通常我们说的引用都是左值引用
*/

// 引用（reference）为对象起了另外一个名字，引用类型引用（refers to）另外一种类型。
// 通过将声明符写成&d的形式来定义引用类型，其中 d是声明的变量名

int val = 1024;
int &refval = val;   // refval指向val（是val的另一个名字）
// int &refval2;        // 错误，引用必须被初始化

// 一般在初始化变量时，初始值会被拷贝到新建的对象中。
// 然而定义引用时，程序把引用和它的初始值绑定（bind）在一起，而不是将初始值拷贝给引用。
// 一旦初始化完成，引用将和它的初始值对象一直绑定在一起。
// 因为无法令引用重新绑定到另外一个对象，因此引用必须初始化。

// 引用即别名

// 引用并非对象，相反，它只是为已有的对象新起另一个名字

// refval = 2;       // 为啥错误？    将2赋值给refval指向的对象，即val
int ii = refval;  // 与ii = val执行结果一样

int &refval3 = refval;

int i = refval;  // 利用与refval绑定的对象的值初始化变量i


// 引用的定义

// 引用只能绑定在对象身上，不能与字面值或某个表达式的计算结果绑定在一起

